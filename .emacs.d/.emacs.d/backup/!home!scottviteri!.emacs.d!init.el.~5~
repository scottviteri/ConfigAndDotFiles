;;import elpa
(require 'package)
;add melpa as a resource
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(package-initialize)

(setq package-enable-at-startup nil)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(setq inhibit-startup-message t)
;(setq inhibit-startup-echo-are-message t)

(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
(tooltip-mode -1)
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)

;; about to try to use elpa evil instead of local evil
;; load first in further config creates errors
(add-to-list 'load-path "~/.emacs.d/evil")
(setq evil-want-abbrev-expand-on-insert-exit nil)
(setq evil-want-keybinding nil)
(setq evil-want-integration t)
(require 'evil)
(evil-mode 1)


(setq abbrev-file-name             ;; tell emacs where to read abbrev
        "~/.emacs.d/abbrev_defs")    ;; definitions from...

;; run code for proof general, including adding hooks for .v files
;; add proof general into load-path <-- I think slowing down my startup
(load "~/.emacs.d/PG/generic/proof-site")


;; company coq dependencies
(require 'company-coq)

(add-hook 'coq-mode-hook 'company-coq-mode)
(setq proof-spash-seen t)

(require 'python-mode)

(global-prettify-symbols-mode 1)

(setq python-symbols-list '(lambda ()
        (mapc (lambda (pair) (push pair prettify-symbols-alist))
            '(("def" . "𝒇")
             ("class" . "𝑪")
             ("and" . "∧")
             ("or" . "∨")
             ("not" . "￢")
             ("in" . "∈")
             ("not in" . "∉")
             ("return" . "⟼")
             ("yield" . "⟻")
             ("for" . "∀")
             ("!=" . "≠")
             ("==" . "＝")
             (">=" . "≥")
             ("<=" . "≤")
             ("=" . "≝")
             ;; Base Types
             ("int" .      #x2124) ("float" .    #x211d)
             ("str" .      #x1d54a)
             ("True" .     #x1d54b)
             ("False" .    #x1d53d)))))

(add-hook 'python-mode-hook python-symbols-list)


(setq backup-directory-alist '(("." . "~/.emacs.d/backup"))
    backup-by-copying t    ; Don't delink hardlinks
    version-control t      ; Use version numbers on backups
    delete-old-versions t  ; Automatically delete excess backups
    kept-new-versions 20   ; how many of the newest versions to keep
    kept-old-versions 5    ; and how many of the old
    )


(use-package crux
    :ensure t
    :bind (("C-a" . crux-move-beginning-of-line)))
(add-hook 'before-save-hook 'delete-trailing-whitespace)


(use-package ivy
      :ensure t
      :diminish ivy-mode
      :config
      (ivy-mode t))

(setq ivy-initial-inputs-alist nil)

(require 'powerline)
(powerline-center-evil-theme)
;;(use-package feebleline
;;    :ensure t)


(use-package markdown-mode
    :ensure t
    :commands (markdown-mode gfm-mode)
    :mode (("README\\.md\\'" . gfm-mode)
           ("\\.md\\'" . markdown-mode)
           ("\\.markdown\\'" . markdown-mode))
    :init (setq markdown-command "pandoc")
    )


(use-package google-this
    :ensure t)

(require 'org)

(org-babel-do-load-languages
 'org-babel-load-languages
 '(
   (C . t)
   (sh . t)
   (python . t)
   (R . t)
   (ruby . t)
   (ditaa . t)
   (dot . t)
   (octave . t)
   (sqlite . t)
   (perl . t)
   ))

(setq org-highlight-latex-and-related '(latex))

(add-to-list 'load-path "/usr/share/emacs24/site-lisp/mu4e")
(require 'mu4e)

(setq mu4e-maildir (expand-file-name "~/Maildir/Gmail")
      mu4e-drafts-folder "/[Gmail].Drafts"
      mu4e-sent-folder   "/[Gmail].Sent Mail"
      mu4e-trash-folder  "/[Gmail].Trash"
      ;; allow for updating mail using 'U' in the main view:
      mu4e-get-mail-command "offlineimap"
      mu4e-compose-signature-auto-include nil
      mu4e-compose-signature ""
      mu4e-headers-sort-field :date
      mu4e-headers-sort-direction 'descending
      user-mail-address "scottviteri@gmail.com"
      user-full-name "Scott Viteri")

(require 'smtpmail)

(setq message-send-mail-function 'smtpmail-send-it
      starttls-use-gnutls t
      smtpmail-starttls-credentials
      '(("smtp.gmail.com" 587 nil nil))
      smtpmail-auth-credentials
      (expand-file-name "~/.authinfo.gpg")
      smtpmail-default-smtp-server "smtp.gmail.com"
      smtpmail-smtp-server "smtp.gmail.com"
      smtpmail-smtp-service 587
      smtpmail-debug-info t)

;; add evil collection to .emacs.d
(add-to-list 'load-path (expand-file-name "~/LocalSoftware/evil-collection/"))
;; could potentially init all of evil collection
;(require 'evil-collection-mu4e) ; would do (init-evil-collection) or something like that after

(with-eval-after-load 'mu4e (require 'evil-collection-mu4e) (evil-collection-mu4e-setup))

;(add-hook 'message-mode-hook 'turn-on-orgtbl)
;(add-hook 'message-mode-hook 'turn-on-orgstruct++)

;; move to emacs folder
(add-to-list 'load-path (expand-file-name "~/LocalSoftware/org-mime/"))
(require 'org-mime)
(setq org-mime-library 'mml)


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#000000" "#8b0000" "#00ff00" "#ffa500" "#7b68ee" "#dc8cc3" "#93e0e3" "#dcdccc"])
 '(custom-enabled-themes (quote (manoj-dark)))
 '(custom-safe-themes
   (quote
    ("d1cc05d755d5a21a31bced25bed40f85d8677e69c73ca365628ce8024827c9e3" default)))
 '(fci-rule-color "#383838")
 '(send-mail-function (quote smtpmail-send-it)))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
