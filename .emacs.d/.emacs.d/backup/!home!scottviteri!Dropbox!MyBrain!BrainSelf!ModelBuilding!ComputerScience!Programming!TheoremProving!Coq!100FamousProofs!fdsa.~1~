(Definition sqrt2_not_rational.sqrt2_not_rational 
            (Lambda p nat (Lambda q nat (App Coq.Init.Wf.well_founded_ind nat Coq.Init.Peano.lt Coq.Arith.Wf_nat.lt_wf (Lambda q nat (Prod p nat (Prod (Anonymous) (App Coq.Init.Logic.not (App eq nat q O)) (Prod (Anonymous) (App eq nat (App Coq.Init.Nat.mul p p) (App Coq.Init.Nat.mul (App S (App S O)) (App Coq.Init.Nat.mul q q))) False)))) (Lambda q nat (Lambda Hrec (Prod y nat (Prod (Anonymous) (App Coq.Init.Peano.lt y q) (Prod p nat (Prod (Anonymous) (App Coq.Init.Logic.not (App eq nat y O)) (Prod (Anonymous) (App eq nat (App Coq.Init.Nat.mul p p) (App Coq.Init.Nat.mul (App S (App S O)) (App Coq.Init.Nat.mul y y))) False))))) (Lambda p nat (Lambda Hneq (App Coq.Init.Logic.not (App eq nat q O)) (App (Lambda Hlt_O_q (App Coq.Init.Peano.lt O q) (Lambda Heq (App eq nat (App Coq.Init.Nat.mul p p) (App Coq.Init.Nat.mul (App S (App S O)) (App Coq.Init.Nat.mul q q))) (App Hrec (App Coq.Init.Nat.sub (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (App Coq.Init.Nat.mul (App S (App S O)) p)) (App sqrt2_not_rational.comparison4 p q Hlt_O_q Heq) (App Coq.Init.Nat.sub (App Coq.Init.Nat.mul (App S (App S (App S O))) p) (App Coq.Init.Nat.mul (App S (App S (App S (App S O)))) q)) (App Coq.Init.Logic.not_eq_sym nat O (App Coq.Init.Nat.sub (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (App Coq.Init.Nat.mul (App S (App S O)) p)) (App sqrt2_not_rational.lt_neq O (App Coq.Init.Nat.sub (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (App Coq.Init.Nat.mul (App S (App S O)) p)) (App Coq.Arith.Plus.plus_lt_reg_l O (App Coq.Init.Nat.sub (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (App Coq.Init.Nat.mul (App S (App S O)) p)) (App Coq.Init.Nat.mul (App S (App S O)) p) (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.mul (App S (App S O)) p) (Lambda n nat (App Coq.Init.Peano.lt n (App Coq.Init.Nat.add (App Coq.Init.Nat.mul (App S (App S O)) p) (App Coq.Init.Nat.sub (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (App Coq.Init.Nat.mul (App S (App S O)) p))))) (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (Lambda n nat (App Coq.Init.Peano.lt (App Coq.Init.Nat.mul (App S (App S O)) p) n)) (Cast (App Coq.Arith.Gt.gt_le_S (App Coq.Init.Nat.mul (App S (App S O)) p) (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (Cast (App sqrt2_not_rational.comparison2 p q Hlt_O_q Heq) REVERTcast (App Coq.Init.Peano.gt (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (App Coq.Init.Nat.mul (App S (App S O)) p)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.mul (App S (App S O)) p) (App Coq.Init.Nat.mul (App S (App S (App S O))) q))) (App Coq.Init.Nat.add (App Coq.Init.Nat.mul (App S (App S O)) p) (App Coq.Init.Nat.sub (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (App Coq.Init.Nat.mul (App S (App S O)) p))) (App Coq.Arith.Minus.le_plus_minus (App Coq.Init.Nat.mul (App S (App S O)) p) (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (App Coq.Arith.PeanoNat.Nat.lt_le_incl (App Coq.Init.Nat.mul (App S (App S O)) p) (App Coq.Init.Nat.mul (App S (App S (App S O))) q) (App sqrt2_not_rational.comparison2 p q Hlt_O_q Heq)))) (App Coq.Init.Nat.add (App Coq.Init.Nat.mul (App S (App S O)) p) O) (App Coq.Init.Peano.plus_n_O (App Coq.Init.Nat.mul (App S (App S O)) p)))))) (App sqrt2_not_rational.new_equality p q Hlt_O_q Heq)))) (App Coq.Arith.Lt.neq_0_lt q (App Coq.Init.Logic.not_eq_sym nat q O Hneq))))))) q p)))) 

