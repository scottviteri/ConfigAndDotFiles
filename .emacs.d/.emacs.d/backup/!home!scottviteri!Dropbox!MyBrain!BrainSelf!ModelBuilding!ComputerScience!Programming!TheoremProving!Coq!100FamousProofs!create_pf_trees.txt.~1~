Some proofs will not be converted by PrintAST.

Every pf that cannot be converted first tries to load opaque def'ns from disk

There are some pfs that can be printed despite having some opaque dependencies

Defn Unfoldable constant:
 defined by Definition or Let, or by a command assimilated to a def'n using Fixpoint, Program Definition, etc, or a pf ended by Defined
 Unfolding a constant means replacing it by its definition

Proof ended by Qed is not unfoldable
Qed, fxn form of let -> Opaque
Defined, let -> Transparent

There some unfoldable and foldable pfs that can be converted
Transparent means able to be reduced.
 Reduced means replacing name with definition

The Opaque and Transparent commands control reduction strategies

_________________

Find out which proofs I can convert:

Note: Bir_par does not rely on constants/axioms
      Does not fetch opaque before print bir_par

Fetches from disk do not repeat themselves

| Name          | Declaration | Ending | Opaque Deps | Convertible                |
|---------------+-------------+--------+-------------+----------------------------|
| appears       | Fixpoint    | end    | None        | Yes                        |
| collision     | Fixpoint    | end    | None        | Yes                        |
| enumerate     | Fixpoint    | end    | None        | Yes                        |
| len_enum      | Lemma       | Qed    | Only Itself | Yes                        |
| filter_app    | Lemma       | Qed    | Only Itself | Only w/ @                  |
| cart_prod     | Fixpoint    | end    | None        | Only w/ @                  |
| picks         | Fixpoint    | end    | None        | Only w/ @                  |
| len_cart_prod | Lemma       | Qed    | Yes         | Only w/ @                  |
| Zlength_picks | Lemma       | Qed    | Yes         | No!                        |
| bir_par       | Theorem     | Qed    | Yes         | No  (structures.orderstac) |

Looks like the ones that use imports are the ones that cannot be converted!
May just be working too hard -- may create very large pf.
  Could put print statement into plugin
  Could try PrintAST on dependencies
    Stalls on Zlength_correct.
So I will need to limit the number of levels of depth
 Do this in the plugin
 First do plugin hello world
